@prefix sbol_2

TopLevel(type)
(
  Identified(type)
)

# -- docs-family Layer 1 start --
# Name: Model
# Summary: A template to hold external (non sbol_2 model).
# Description: Provide additional meta-data to enable better reasoning about the contents of this model.  
# Usage: Given a URI to a external model, definition of language and framework assign to the model property of the ModuleDefinition.
# Parameters: URI - source - URI of the external location of the model, Identifier - language - URI that specifies the language in which the model is implemented,  Identifier - framework - URI that specifies the framework in which the modei is implemented.
# -- docstring family end --

Model(source, language, framework)
(
  TopLevel(Model)
  sbol_2.<source> = source
  sbol_2.<language> = language
  sbol_2.<framework> = framework
)

SBMLModel(source, framework)
(
  Model(source,i_SBML,framework)
)

CellMLModel(source, framework)
(
  Model(source,i_CellML,framework)
)

BioPAXModel(source, framework)
(
  Model(source,i_BioPAX,framework)
)

# -- docs-family Layer 2 start --
# Name: hasModel
# Summary: A template to hold external (non sbol_2 model).
# Description: Provide additional meta-data to enable better reasoning about the contents of this model.  
# Usage: Given a URI to a external model, definition of language and framework define the hasModel inside a ModuleDefinition.
# Parameters: URI - source - source - URI of the external location of the model, Identifier - language - URI that specifies the language in which the model is implemented,  Identifier - framework - URI that specifies the framework in which the modei is implemented.
# -- docstring family end --

hasModel(source,language,framework)
(
    model = self._.language._.framework._model
    self._.language._.framework._model is a Model(source,language,framework)
)

hasSBMLModel(source, framework)
(
  hasModel(source,i_SBML,framework)
)

hasCellMLModel(source, framework)
(
  hasModel(source,i_CellML,framework)
)

hasBioPAXModel(source, framework)
(
  hasModel(source,i_BioPAX,framework)
)
