@prefix sbol

MapsTo(component_functionalComponent_local, component_functionalComponent_remote, refinement)
(
  Identified(MapsTo)
  local = component_functionalComponent_local
  remote = component_functionalComponent_remote
  sbol.<refinement> = refinement
)

MapsUseRemote(component_functionalComponent_local, component_functionalComponent_remote) 
(
  MapsTo(component_functionalComponent_local, component_functionalComponent_remote, i_useRemote)
)

MapsUseLocal(component_functionalComponent_local, component_functionalComponent_remote)  
(
  MapsTo(component_functionalComponent_local, component_functionalComponent_remote, i_useLocal)
)

MapsIdentical(component_functionalComponent_local, component_functionalComponent_remote) 
(
  MapsTo(component_functionalComponent_local, component_functionalComponent_remote, i_verifyIdentical)
)

MapsMerge(component_functionalComponent_local, component_functionalComponent_remote)     
(
  MapsTo(component_functionalComponent_local, component_functionalComponent_remote, i_merge)
)

mapsTo(componentDefinition_local,componentDefinition_remote, refinment)
(
 functionalComponent = componentDefinition_local._fc
 functionalComponent = componentDefinition_remote._fc
  
 componentDefinition_local._fc._mapsTo_.componentDefinition_remote._fc is a MapsTo(componentDefinition_local._fc, componentDefinition_remote._fc,refinment)
 mapsTo = componentDefinition_local._fc._mapsTo_.componentDefinition_remote._fc
)


mapsUseRemote(componentDefinition_local, componentDefinition_remote) 
(
  mapsTo(componentDefinition_local, componentDefinition_remote, i_useRemote)
)

mapsUseLocal(componentDefinition_local, componentDefinition_remote)  
(
  mapsTo(componentDefinition_local, componentDefinition_remote, i_useLocal)
)

mapsIdentical(componentDefinition_local, componentDefinition_remote) 
(
  mapsTo(componentDefinition_local, componentDefinition_remote, i_verifyIdentical)
)

mapsMerge(componentDefinition_local, componentDefinition_remote)     
(
  mapsTo(componentDefinition_local, componentDefinition_remote, i_merge)
)




