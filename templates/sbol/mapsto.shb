@prefix sbol

MapsTo(componentinstance_uri_local, componentinstance_uri_remote, ref)
(
  Identified(MapsTo)
  sbol.<local> = componentinstance_uri_local
  sbol.<remote> = componentinstance_uri_remote
  refinement = ref
)

MapsUseRemote(componentinstance_uri_local, componentinstance_uri_remote) 
(
  MapsTo(componentinstance_uri_local, componentinstance_uri_remote, i_useRemote)
)

MapsUseLocal(componentinstance_uri_local, componentinstance_uri_remote)  
(
  MapsTo(componentinstance_uri_local, componentinstance_uri_remote, i_useLocal)
)

MapsIdentical(componentinstance_uri_local, componentinstance_uri_remote) 
(
  MapsTo(componentinstance_uri_local, componentinstance_uri_remote, i_verifyIdentical)
)

MapsMerge(componentinstance_uri_local, componentinstance_uri_remote)     
(
  MapsTo(componentinstance_uri_local, componentinstance_uri_remote, i_merge)
)

mapsTo(local,remote, refinment)
(
 local._fc is a InOutComponent(local)
 remote._fc is a InOutComponent(remote)

 functionalcomponent = local._fc
 functionalcomponent = remote._fc
  
 local._fc._mapsTo_.remote._fc is a MapsTo(local._fc, remote._fc,refinment)
 mapsTo = local._fc._mapsTo_.remote._fc
)


mapsUseRemote(componentinstance_uri_local, componentinstance_uri_remote) 
(
  mapsTo(componentinstance_uri_local, componentinstance_uri_remote, i_useRemote)
)

mapsUseLocal(componentinstance_uri_local, componentinstance_uri_remote)  
(
  mapsTo(componentinstance_uri_local, componentinstance_uri_remote, i_useLocal)
)

mapsIdentical(componentinstance_uri_local, componentinstance_uri_remote) 
(
  mapsTo(componentinstance_uri_local, componentinstance_uri_remote, i_verifyIdentical)
)

mapsMerge(componentinstance_uri_local, componentinstance_uri_remote)     
(
  mapsTo(componentinstance_uri_local, componentinstance_uri_remote, i_merge)
)




