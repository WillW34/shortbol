@prefix sbol

Module(definition)
(
  Identified(Module)
  sbol.definition = definition
)

FunctionalComponent(def, direction)
(
  ComponentInstance(FunctionalComponent, def)
  sbol.direction = direction
)

PrivateFunctionalComponent(def, direction)
(
  PrivateComponentInstance(FunctionalComponent, def)
  sbol.direction = direction
)

InputComponent(def)  
(
  FunctionalComponent(def, sbol.in)
)
OutputComponent(def) 
(
  FunctionalComponent(def, sbol.out)
)

InOutComponent(def)  
(
  FunctionalComponent(def, sbol.inout)
)

NoneComponent(def)   
(
  FunctionalComponent(def, sbol.none)
)


# Participation Types
inhibitor = <http://identifiers.org/biomodels.sbo/SBO:0000020>
inhibited = <http://identifiers.org/biomodels.sbo/SBO:0000642>
reactant = <http://identifiers.org/biomodels.sbo/SBO:0000010>
stimulator =  <http://identifiers.org/biomodels.sbo/SBO:0000459>
stimulated = <http://identifiers.org/biomodels.sbo/SBO:0000643>
product = <http://identifiers.org/biomodels.sbo/SBO:0000011>
promoter_t = <http://identifiers.org/biomodels.sbo/SBO:0000598> 
modifier = <http://identifiers.org/biomodels.sbo/SBO:0000019>
modified = <http://identifiers.org/biomodels.sbo/SBO:0000644>
template = <http://identifiers.org/biomodels.sbo/SBO:0000645>


# Participation Templates
Participation(functional_component, withrole)
(
  Identified(Participation)
  role = withrole
  participant = functional_component
)

Inhibitor(functional_component)
(
  Participation(functional_component,sbol.inhibitor)
)

Inhibited(functional_component)
(
  Participation(functional_component,sbol.inhibited)
)

Reactant(functional_component)
(
  Participation(functional_component,sbol.reactant)
)

Stimulator(functional_component)
(
  Participation(functional_component,sbol.stimulator)
)

Stimulated(functional_component)
(
  Participation(functional_component,sbol.stimulated)
)

Product(functional_component)
(
  Participation(functional_component,sbol.product)
)

Promoter_t(functional_component)
(
  Participation(functional_component,sbol.promoter_t)
)

Modifier(functional_component)
(
  Participation(functional_component,sbol.modifier)
)

Modified(functional_component)
(
  Participation(functional_component,sbol.modified)
)

Template(functional_component)
(
  Participation(functional_component,sbol.template)
)


# Interaction types
inhibition = <http://identifiers.org/biomodels.sbo/SBO:0000169>
stimulation = <http://identifiers.org/biomodels.sbo/SBO:0000170>
biochemical_reaction = <http://identifiers.org/biomodels.sbo/SBO:0000176>
noncovalent_bonding = <http://identifiers.org/biomodels.sbo/SBO:0000177>
degradation = <http://identifiers.org/biomodels.sbo/SBO:0000179>
genetic_production = <http://identifiers.org/biomodels.sbo/SBO:0000589>
control = <http://identifiers.org/biomodels.sbo/SBO:0000168>

# Interaction Templates
Interaction(type)
(
  Identified(Interaction)
  sbol.type = type
)


Inhibition(name, of, by)
(
  name.of is a OutputComponent(of)
  name.by is a InputComponent(by)
  
  name is a Interaction(inhibition)
  (
    self.participation.of is a Participation(name.of, inhibited)
    self.participation.by is a Participation(name.by, inhibitor)
    participation = self.participation.of
    participation = self.participation.by
  )
)

NonCovBonding(name, reactantA, reactantB)
(
  name.reactantA is a InOutComponent(reactantA)
  name.reactantB is a InOutComponent(reactantB)  
  
  name is a Interaction(noncovalent_bonding)
  (
    self.participation.reactantA is a Participation(name.reactantA, reactant)
    self.participation.reactantB is a Participation(name.reactantB, reactant)
    participation = self.participation.reactantA
    participation = self.participation.reactantB
  )
)

NonCovBonding3(name, reactantA, reactantB, reactantC)
(
  name.reactantA is a InOutComponent(reactantA)
  name.reactantB is a InOutComponent(reactantB)
  name.reactantC is a InOutComponent(reactantC)    
  
  name is a Interaction(noncovalent_bonding)
  (
    self.participation.reactantA is a Participation(name.reactantA, reactant)
    self.participation.reactantB is a Participation(name.reactantB, reactant)
    self.participation.reactantC is a Participation(name.reactantC, reactant)
    
    participation = self.participation.reactantA
    participation = self.participation.reactantB
    participation = self.participation.reactantC    
  )

  interaction = name
)

