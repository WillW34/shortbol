# This example is for an implementation of a NOR gate.
# However this NOR gate can be built with a range of specific parts.
# Instead of specifying each full construct we instead use 
# combinatorialDerivation and the extension which will build all constructs automatically.
# Note: To attempt to create a concise example the RBS,CDS and terminator are all contained within a single DNA template. 

# We begin with a potential implementation

pTeT is a Promoter()
(
  hasDNASequence("ttgacagcttatcatcgataagctttaat")
)

pBAD is a Promoter()
(
  hasDNASequence("atgccatagcatttttatcc")
)

lacI is a DNA()
(
  hasDNASequence("aaagaggagaaaatggtgaatgtgaaaccagtaacgttatacgatgtcgcagagtatgccggtgtctcttatcagaccgtttcccgcgtggtgaaccaggccagccacgtttctgcgaaaacgcgggaaaaagtggaagcggcgatggcggagctgaattacattcccaaccgcgtggcacaacaactggcgggcaaacagtcgttgctgattggcgttgccacctccagtctggccctgcacgcgccgtcgcaaattgtcgcggcgattaaatctcgcgccgatcaactgggtgccagcgtggtggtgtcgatggtagaacgaagcggcgtcgaagcctgtaaagcggcggtgcacaatcttctcgcgcaacgcgtcagtgggctgatcattaactatccgctggatgaccaggatgccattgctgtggaagctgcctgcactaatgttccggcgttatttcttgatgtctctgaccagacacccatcaacagtattattttctcccatgaagacggtacgcgactgggcgtggagcatctggtcgcattgggtcaccagcaaatcgcgctgttagcgggcccattaagttctgtctcggcgcgtctgcgtctggctggctggcataaatatctcactcgcaatcaaattcagccgatagcggaacgggaaggcgactggagtgccatgtccggttttcaacaaaccatgcaaatgctgaatgagggcatcgttcccactgcgatgctggttgccaacgatcagatggcgctgggcgcaatgcgcgccattaccgagtccgggctgcgcgttggtgcggatatctcggtagtgggatacgacgataccgaagacagctcatgttatatcccgccgttaaccaccatcaaacaggattttcgcctgctggggcaaaccagcgtggaccgcttgctgcaactctctcagggccaggcggtgaagggcaatcagctgttgcccgtctcactggtgaaaagaaaaaccaccctggcgcccaatacgcaaaccgcctctccccgcgcgttggccgattcattaatgcagctggcacgacaggtttcccgactggaaagcgggcaggctgcaaacgacgaaaactacgctttagtagcttaataactctgatagtgctagtgtagatctcccaggcatcaaataaaacgaaaggctcagtcgaaagactgggcctttcgttttatctgttgtttgtcggtgaacgctctctactagagtcacactggctcaccttcgggtgggcctttctgcgtttata")
)

pLlac is a Promoter()
(
  hasDNASequence("aattgtgagcggataacaattgacattgtgagcggataacaagatactgagcaca")
)

mCherry is a DNA()
(
  hasDNASequence("atggtgagcaagggcgaggaggataacatggccatcatcaaggagttcatgcgcttcaaggtgcacatggagggctccgtgaacggccacgagttcgagatcgagggcgagggcgagggccgcccctacgagggcacccagaccgccaagctgaaggtgaccaagggtggccccctgcccttcgcctgggacatcctgtcccctcagttcatgtacggctccaaggcctacgtgaagcaccccgccgacatccccgactacttgaagctgtccttccccgagggcttcaagtgggagcgcgtgatgaacttcgaggacggcggcgtggtgaccgtgacccaggactcctccctgcaggacggcgagttcatctacaaggtgaagctgcgcggcaccaacttcccctccgacggccccgtaatgcagaagaagaccatgggctgggaggcctcctccgagcggatgtaccccgaggacggcgccctgaagggcgagatcaagcagaggctgaagctgaaggacggcggccactacgacgctgaggtcaagaccacctacaaggccaagaagcccgtgcagctgcccggcgcctacaacgtcaacatcaagttggacatcacctcccacaacgaggactacaccatcgtggaacagtacgaacgcgccgagggccgccactccaccggcggcatggacgagctgtacaag")
)

pTeT_c is a SubComponent(pTeT)
pBAD_c is a SubComponent(pBAD)
lacI_c is a SubComponent(lacI)
pLlac_c is a SubComponent(pLlac)
mCherry_c is a SubComponent(mCherry)

pair1 is a Precedes(pTeT_c, lacI_c)
pair2 is a Precedes(pBAD_c, lacI_c)
pair3 is a Precedes(lacI_c, pLlac_c)
pair4 is a Precedes(pLlac_c, mCherry_c)

NOR_gate is a DNA()
(
  hasFeature = pTeT_c
  hasFeature = pBAD_c
  hasFeature = lacI_c
  hasFeature = pLlac_c
  hasFeature = mCherry_c
  hasConstraint = pair1 
  hasConstraint = pair2 
  hasConstraint = pair3 
  hasConstraint = pair4 
)

# Then specify alternative parts which will be swapped out for each part.

# varaints to replace pTeT
plux is a Promoter()
(
  hasDNASequence("acctgtaggatcgtacaggtttacgcaagaaaatggtttgttatagtcgaatacctctggcggtgata")
)
pRhlR is a Promoter()
(
  hasDNASequence("tcctgcatgaattggtaggcttacgcaagaaaatggtttgttatagtcgaa")
)

# variants to replace pBAD
Pu is a Promoter()
(
  hasDNASequence("cccgggaaagcgcgatgaaccttttttatcgctgccttgatcaaatcgacaggtggttatgcgcgattgatgatttgctcaaatacagccagcgtgctgtagattttctctcataccccccctttcttttttacaaagaaaatcaataatttagatgaaataaggggatcggtataagcaatggcatggcggttgctagctatacgagacttaaaataaaaatagtggtgacccttcaatgttgtattttctcaactctgttcagattggttgctttcgccatgtatatcctcaaagcgggccagccgtagccgttacgc")
)

pLL is a Promoter()
(
 hasDNASequence("gtggagatgaacaaaaaacacacagccattgtaagacagcctgaacaaatcccccctgttgcgtctgctgaaaatattcacaaaataaagcg")
)

# variants to replace lacI
luxR is a DNA()
(
  hasDNASequence("aaagaggagaaatactagatgaaaaacataaatgccgacgacacatacagaataattaataaaattaaagcttgtagaagcaataatgatattaatcaatgcttatctgatatgactaaaatggtacattgtgaatattatttactcgcgatcatttatcctcattctatggttaaatctgatatttcaatcctagataattaccctaaaaaatggaggcaatattatgatgacgctaatttaataaaatatgatcctatagtagattattctaactccaatcattcaccaattaattggaatatatttgaaaacaatgctgtaaataaaaaatctccaaatgtaattaaagaagcgaaaacatcaggtcttatcactgggtttagtttccctattcatacggctaacaatggcttcggaatgcttagttttgcacattcagaaaaagacaactatatagatagtttatttttacatgcgtgtatgaacataccattaattgttccttctctagttgataattatcgaaaaataaatatagcaaataataaatcaaacaacgatttaaccaaaagagaaaaagaatgtttagcgtgggcatgcgaaggaaaaagctcttgggatatttcaaaaatattaggttgcagtgagcgtactgtcactttccatttaaccaatgcgcaaatgaaactcaatacaacaaaccgctgccaaagtatttctaaagcaattttaacaggagcaattgattgcccatactttaaaaattaataacactgatagtgctagtgtagatcactactagagccaggcatcaaataaaacgaaaggctcagtcgaaagactgggcctttcgttttatctgttgtttgtcggtgaacgctctctactagagtcacactggctcaccttcgggtgggcctttctgcgtttata")
)

CinR is a DNA()
(
  hasDNASequence("aaagaggagaaatactagatgattgagaatacctatagcgaaaagttcgagtccgcgttcgaacagatcaaggcggcggccaacgtggatgccgccatccgtattctccaggcggaatataacctcgatttcgtcacctaccatctcgcccagacgatcgcgagcaagatcgattcgcccttcgtgcgcaccacctatccggatgcctgggtttcccgctacctcctcaacagctatgtgaaggtcgatccgatcgtcaagcagggcttcgaacgccagctgcccttcgactggagcgaggtcgaaccgacgccggaggcctatgccatgctggtcgacgcccagaaacacggcatcggtggcaatggctactccatccccgtcgccgacaaggcgcagcgccgcgccctgctgtcgctgaatgcccgtataccggccgacgaatggaccgagctcgtgcgccgctgccgcaacgagtggatcgagatcgcccatctgatccaccgcaaggccgtctatgagctgcatggcgaaaacgatccggtgccggcattgtcgccgcgcgagatcgagtgtctgcactggaccgccctcggcaaggattacaaggatatttcggtcatcctgggcatatcagagcataccacacgcgattacctgaagaccgcccgcttcaagctcggctgcgccacgatctcggccgccgcgtcgcgggctgttcaattgcgcatcatcaatccctaataatactagagccaggcatcaaataaaacgaaaggctcagtcgaaagactgggcctttcgttttatctgttgtttgtcggtgaacgctctctactagagtcacactggctcaccttcgggtgggcctttctgcgtttata")
)

# variants to replace pLlac
Pv is a Promoter()
(
  hasDNASequence("ctgaccattacgctctccttgaatgttgtctggtagttctacaaatgaatccagatagcataacttttatatattgtgcaatctcacatgc")
)

ctx is a Promoter()
(
  hasDNASequence("aacagaaaatgataaaaaaggactaatagtatattttgatttttgatttttgatttttgatttttgatttttgatttttgatttttgatttcaaataatacaaatttatttacttatttaattgttttgatcaattatttttctg")
)

# variants to replace mCherry
YFP is a DNA()
(
  hasDNASequence("taagcacctgtaggatcgtacaggtttacgcaagaaaatggtttgttatagtcgaataacaccgtgcgtgttgactattttacctctggcggtgatatactagagaaagaggagaaatactagatggtgagcaagggcgaggagctgttcaccggggtggtgcccatcctggtcgagctggacggcgacgtaaacggccacaagttcagcgtgtccggcgagggcgagggcgatgccacctacggcaagctgaccctgaagttcatctgcaccaccggcaagctgcccgtgccctggcccaccctcgtgaccaccttcggctacggcctgcaatgcttcgcccgctaccccgaccacatgaagctgcacgacttcttcaagtccgccatgcccgaaggctacgtccaggagcgcaccatcttcttcaaggacgacggcaactacaagacccgcgccgaggtgaagttcgagggcgacaccctggtgaaccgcatcgagctgaagggcatcgacttcaaggaggacggcaacatcctggggcacaagctggagtacaactacaacagccacaacgtctatatcatggccgacaagcagaagaacggcatcaaggtgaacttcaagatccgccacaacatcgaggacggcagcgtgcagctcgccgaccactaccagcagaacacccccatcggcgacggccccgtgctgctgcccgacaaccactacctgagctaccagtccgccctgagcaaagaccccaacgagaagcgcgatcacatggtcctgctggagttcgtgaccgccgccgggatcactctcggcatggacgagctgtacaagaggcctgctgcaaacgacgaaaactacgctttagtagcttaataatactagagccaggcatcaaataaaacgaaaggctcagtcgaaagactgggcctttcgttttatctgttgtttgtcggtgaacgctctctactagagtcacactggctcaccttcgggtgggcctttctgcgtttata")
)

GFP is a DNA()
(
  hasDNASequence("tcacacaggaaagtactagatgcgtaaaggagaagaacttttcactggagttgtcccaattcttgttgaattagatggtgatgttaatgggcacaaattttctgtcagtggagagggtgaaggtgatgcaacatacggaaaacttacccttaaatttatttgcactactggaaaactacctgttccatggccaacacttgtcactactttcggttatggtgttcaatgctttgcgagatacccagatcatatgaaacagcatgactttttcaagagtgccatgcccgaaggttatgtacaggaaagaactatatttttcaaagatgacgggaactacaagacacgtgctgaagtcaagtttgaaggtgatacccttgttaatagaatcgagttaaaaggtattgattttaaagaagatggaaacattcttggacacaaattggaatacaactataactcacacaatgtatacatcatggcagacaaacaaaagaatggaatcaaagttaacttcaaaattagacacaacattgaagatggaagcgttcaactagcagaccattatcaacaaaatactccaattggcgatggccctgtccttttaccagacaaccattacctgtccacacaatctgccctttcgaaagatcccaacgaaaagagagaccacatggtccttcttgagtttgtaacagctgctgggattacacatggcatggatgaactatacaaataataatactagagccaggcatcaaataaaacgaaaggctcagtcgaaagactgggcctttcgttttatctgttgtttgtcggtgaacgctctctactagagtcacactggctcaccttcgggtgggcctttctgcgtttata")
)

# Variable for pTeT
promoter_variable_1 is a OneVariableComponent(pTeT_c)
(
  variant = plux
  variant = pRhlR
)

# Variable for pBAD
promoter_variable_2 is a OneVariableComponent(pBAD_c)
(
  variant = Pu
  variant = pLL
)

# Variable for Laci
repressor_variable_1 is a OneVariableComponent(lacI_c)
(
  variant = luxR
  variant = CinR
)

# Variable for pLlac
promoter_variable_3 is a OneVariableComponent(pLlac_c)
(
  variant = Pv
  variant = ctx
)

# Variable for mCherry
output_variable_1 is a OneVariableComponent(mCherry_c)
(
  variant = YFP
  variant = GFP
)

nor_gate_derivation is a CombinatorialDerivation(NOR_gate)
(
  hasVariableComponent = promoter_variable_1
  hasVariableComponent = promoter_variable_2
  hasVariableComponent = repressor_variable_1
  hasVariableComponent = promoter_variable_3
  hasVariableComponent = output_variable_1
)

@extension CombinatorialDerivation(nor_gate_derivation)